import{j as e,M as o}from"./iframe-BNWelFxJ.js";import{useMDXComponents as s}from"./index-9xe-tnWN.js";import"./preload-helper-Dp1pzeXC.js";function t(i){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...s(),...i.components};return e.jsxs(e.Fragment,{children:[e.jsx(o,{title:"Architecture decisions/ADR-KOS001 - Library requirements"}),`
`,e.jsx(n.h1,{id:"adr-kos001-library-requirements",children:"ADR-KOS001: Library requirements"}),`
`,e.jsx(n.h2,{id:"status",children:"Status"}),`
`,e.jsx(n.p,{children:"Accepted ✅"}),`
`,e.jsxs(n.ul,{children:[`
`,e.jsx(n.li,{children:"Deciders: Stefan Binder, Daniel Winter"}),`
`,e.jsx(n.li,{children:"Date: October 2023"}),`
`]}),`
`,e.jsx(n.h2,{id:"context",children:"Context"}),`
`,e.jsx(n.p,{children:'Starting late in 2017, an internal UI framework was built, that should be able to be used within all digital projects, independent of the internally called "rails" (German: Schiene), like XXXLutz, Mömax, Möbelix and more. Hydra was created to have a common design language and a consistent brand experience over all rails and countries.'}),`
`,e.jsx(n.p,{children:"Over the last few years the library has grown gradually and many new components, molecules and other features were added. Basically, it's a good thing that a library is an evolving and growing environment. However, on the other hand, multiple features were added that do not belong to a UI library."}),`
`,e.jsx(n.p,{children:"Heading into this direction more and more limitations occurred. Other projects were interested in consuming Hydra, but instead of extending the possible consumers, it mainly used by a few selected projects. The main reasons are:"}),`
`,e.jsxs(n.ul,{children:[`
`,e.jsx(n.li,{children:"Hydra is not usable without the given / enforced folder structure"}),`
`,e.jsx(n.li,{children:"There is a strong coupling between Hydra and Poseidon (the main consumer)"}),`
`,e.jsx(n.li,{children:"Hydra contains a lot of business logic which does not belong there"}),`
`]}),`
`,e.jsx(n.h2,{id:"decision",children:"Decision"}),`
`,e.jsxs(n.p,{children:["Therefore we are aiming for a new UI library called ",e.jsx(n.strong,{children:"Kosmos"}),", that can be used in every digital project within the xxxlutz company. This library should met following requirements:"]}),`
`,e.jsx(n.p,{children:"It should be"}),`
`,e.jsxs(n.ul,{children:[`
`,e.jsx(n.li,{children:"framework, programming language and platform agnostic"}),`
`,e.jsx(n.li,{children:"based on the onion layered principle (more information later)"}),`
`,e.jsx(n.li,{children:"scalable for different rails/brands"}),`
`,e.jsx(n.li,{children:"support SSR"}),`
`,e.jsx(n.li,{children:"an independent standalone library (without any business logic)"}),`
`,e.jsx(n.li,{children:"consumer independent"}),`
`]}),`
`,e.jsx(n.h3,{id:"onion-layered-principle",children:"Onion layered principle"}),`
`,e.jsx(n.p,{children:"According to this principle, we aim to offer consumers three distinct levels that can be consumed independently:"}),`
`,e.jsxs(n.ol,{children:[`
`,e.jsxs(n.li,{children:[`
`,e.jsxs(n.p,{children:[e.jsx(n.strong,{children:"Foundation or tokens layer"}),": This layer provides all design tokens which includes colors, spacings, fonts, typography and so on. We want to export the variables from the design tool Figma via JSON and generate different outputs for different platforms, e.g. CSS, SCSS, Android."]}),`
`]}),`
`,e.jsxs(n.li,{children:[`
`,e.jsxs(n.p,{children:[e.jsx(n.strong,{children:"Tailwind layer"}),": This layer provides an CSS only approach similar to other frameworks like Tailwind. Out of the components itself we want to provide a CSS package that can be consumed based on the foundation layer package. This layer will also provide some best practices how to use the CSS classes with HTML examples based on the chosen approach."]}),`
`]}),`
`,e.jsxs(n.li,{children:[`
`,e.jsxs(n.p,{children:[e.jsx(n.strong,{children:"Components layer"}),": The last layer provides a selection of consumable UI elements. With these UI elements its possible to build different kinds of UI interfaces, prototypes or mocks. The components can be written in React and maybe autogenerated into other frameworks. There are several possibilities to build a component once and then compile it into different other ",e.jsx(n.a,{href:"https://github.com/BuilderIO/mitosis",rel:"nofollow",children:"frameworks"}),"."]}),`
`]}),`
`]}),`
`,e.jsx(n.p,{children:e.jsx(n.strong,{children:"Naming convention"})}),`
`,e.jsxs(n.p,{children:["Within the component layer, we decided to use the ",e.jsx(n.a,{href:"https://atomicdesign.bradfrost.com/table-of-contents/",rel:"nofollow",children:"atomic design methodology"})," naming convention. Making usage of this approach creates some hierarchical manner and let us distinguish our components into"]}),`
`,e.jsxs(n.ul,{children:[`
`,e.jsxs(n.li,{children:[e.jsx(n.strong,{children:"Atoms"})," like Buttons, Eyecatchers, Input etc. and"]}),`
`,e.jsxs(n.li,{children:[e.jsx(n.strong,{children:"Molecules"})," like Accordion, Cards etc."]}),`
`]}),`
`,e.jsx(n.p,{children:"So each layer can be consumed individually or the one that best suits the consumer's needs."}),`
`,e.jsx(n.h3,{id:"styleguide",children:"Styleguide"}),`
`,e.jsx(n.p,{children:"Documenting our UI library for developers or other consumers storybook will be used. This decision is based on following reasons:"}),`
`,e.jsxs(n.ul,{children:[`
`,e.jsx(n.li,{children:"There are multiple plugins that can be used for Figma or accessibility"}),`
`,e.jsx(n.li,{children:"There are great controls and actions to interact with the atoms and molecules"}),`
`,e.jsx(n.li,{children:"It's developer friendly and provides responsive tools out of the box"}),`
`]}),`
`,e.jsx(n.h2,{id:"consequences",children:"Consequences"}),`
`,e.jsx(n.p,{children:"Providing an internal UI library that is used by many different digital projects is not easy as we saw with hydra. Hydra has some limitations to enroll it to other projects or consumers (as above mentioned)."}),`
`,e.jsxs(n.p,{children:["Therefore, our aim is to provide a user-friendly UI library that can be utilized by a variety of projects at no cost. With the flexibility to consume different layers, we want to empower consumers to easily transition to ",e.jsx(n.strong,{children:"Kosmos"}),", and if a complete migration is not feasible, they can still make use of specific components."]}),`
`,e.jsx(n.p,{children:"With that in mind, its essential to get in touch with other projects within the digital xxxlutz setup. This is important to get feedback as soon as possible so that there is a chance to include this feedback into the library again. In this way we can assure to build an not opinionated, independent and stateless UI and reduce the need of breaking changes."}),`
`,e.jsx(n.h3,{id:"further-information",children:"Further information"}),`
`,e.jsx(n.p,{children:"The miro board is an living document that will be adapted over time. In any case we are making a decision, we'll create follow up ADR's and document them here."}),`
`,e.jsxs(n.ul,{children:[`
`,e.jsx(n.li,{children:e.jsx(n.a,{href:"https://miro.com/app/board/o9J_l7Pqi74=/",rel:"nofollow",children:"Miro Board"})}),`
`,e.jsx(n.li,{children:e.jsx(n.a,{href:"https://atomicdesign.bradfrost.com/table-of-contents/",rel:"nofollow",children:"Atomic Design"})}),`
`,e.jsx(n.li,{children:e.jsx(n.a,{href:"https://github.com/BuilderIO/mitosis",rel:"nofollow",children:"Mitosis"})}),`
`,e.jsx(n.li,{children:e.jsx(n.a,{href:"https://storybook.js.org/",rel:"nofollow",children:"Storybook"})}),`
`]})]})}function d(i={}){const{wrapper:n}={...s(),...i.components};return n?e.jsx(n,{...i,children:e.jsx(t,{...i})}):t(i)}export{d as default};
